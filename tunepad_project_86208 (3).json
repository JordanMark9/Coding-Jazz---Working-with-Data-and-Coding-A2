{"artwork":null,"bars":20,"bpm":107,"collaborative":false,"color":"#f067d1","created":"2024-09-08 06:41:39.997000","deleted":false,"description":"","gadget-details":[{"beats":200,"color":"#2f9aef","created":"2024-09-08 06:42:15.882000","deleted":false,"description":"","id":659931,"idata":{"author":"Anonymous","cloned":false,"displayOrder":2,"editor-theme":"tunepad-dark","gain":1,"hasError":false,"midi-input":false,"midi-output":false,"minimized":false,"pan":0,"patchId":11,"python":"# The drum in the background of the peice that will repeat in a loop\n\n\nrest (beats = 2) #rest while the synth introduces the song\n\nwith swing (0.3): # Use Tunepad with swing function to change the rhythm and make the song sound less robotic (TunePad Documentation, 2024)\n    for i in range (0,96): # creating a loop for range (0, 96) for the length of the song\n        with gain(0.5, beats = 196): # Using Gain function to set it at half volume so it isn't too loud (TunePad Documentation, 2024)\n            playNote (4, beats = 1)\n            playNote (4, beats = 0.75)\n            playNote (4, beats = 0.25)\n\n#Playing the final note at the end of the song    \nwith gain (value = [1, 0]): # Using with gain function to fade out the last note (TunePad Documentation, 2024)\n    playNote (9, beats = 4) # Using a cymbal as the final note for the song\n    \n\n\n","show-editor":true,"show-instrument":true,"show-notation":true,"show-output":false,"show-timeline":true},"instrument":"drums","modified":"2024-11-06 01:23:49.914000","name":"Drums","public":false,"remix_parent":null,"version":"2.0","voice":"piano"},{"beats":200,"color":"#2f9aef","created":"2024-09-08 06:43:16.392000","deleted":false,"description":"","id":659935,"idata":{"author":"Anonymous","cloned":false,"displayOrder":4,"editor-theme":"tunepad-dark","gain":1,"hasError":false,"midi-input":false,"midi-output":false,"minimized":false,"pan":0,"patchId":9,"python":"# Create a loop so that the piano plays the chords for the duration of the song\n# Playing the chords in B minor of the 12 bar blues and repeting\nrest (beats = 2) # Resting for 2 beats while Flat Synth melody introduces song\nfrom tunepad.chords import * #Importing the chords from the Tunepad libary so that roman numerals can be used for the chord number in the key (TunePad Chords, 2024)\n\nfor i in range (0,4): #Following the 12 bar blues pattern\n    with gain (0.5, beats = 196): # Using Gain function to set it at half volume so it isn't too loud (TunePad Documentation, 2024)\n        for j in range (0,4): # Using nested loops to repeat chords that are repeated within the loop (Geeksforgeeks, 2017)\n            playChord (\"i\", beats = 4)\n        for j in range (0,2):\n            playChord (\"iv\", beats = 4)\n        for j in range (0,2):\n            playChord (\"i\", beats = 4)\n        playChord (\"v\", beats = 4) # Don't need to use a nested loop for these 4 chords as they are only played a single time and it would be unecessary code\n        playChord (\"iv\", beats = 4)\n        playChord (\"i\", beats = 4)\n        playChord (\"v\", beats = 4)\n\n        \n#Playing the final note at the end of the song    \nwith gain (value = [1, 0]): # Using with gain function to fade out the last note (TunePad Documentation, 2024)\n        playChord (\"i7\", beats = 4) # Playing the final note, the tonic of b minor with a seventh\n\n\n\n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","show-editor":true,"show-instrument":true,"show-notation":true,"show-output":false,"show-timeline":true},"instrument":"piano","modified":"2024-11-06 05:54:28.880000","name":"Piano Chord ","public":false,"remix_parent":null,"version":"2.0","voice":"piano"},{"beats":4,"color":"#2f9aef","created":"2024-10-18 01:01:03.358000","deleted":false,"description":"","id":690074,"idata":{"content":{"ops":[{"insert":"\"CODING WITH JAZZ\"\nCreating a jazz piece based on the key B minor in 4/4 time signature. This was inspired by the jazz some Feelm Intermission by UnderGround Canopy, which also uses 4/4 Time signature and the B minor key. The chord progession is 12 bar blues, meaning it uses the first, fourth and fifth chords of the key signature (B minor):\ni     i     i    i  \niv  iv    i     i \nv   iv    i    v\n\nThis jazz compososition uses 4 different instruments:\nMelody in flat synth"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"A bassline in electric bass"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"The chords in piano"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"Percussion using hat and symbol"},{"attributes":{"list":"bullet"},"insert":"\n"},{"insert":"\nThis code responded to a personal challenge of creating jazz, something with expression and that is up to interpretation with the mechanical nature of code. The precision of code was combatted through adding the \"with swing ():\" function that Tunepad offers.\nDifferent python functions that were explored to create the song and condense the code include loops, nestled loops and 2 Dimensional lists.\nBy merging python coding (that does have some limitations due to how python is used on Tunepad) with different musical theories and structures, like 12 bar blues and swing, I can say my prototype sucessfully solves my personal creative challenge of coding with jazz. \n\nSources used to help create prototyope code material:\n"},{"attributes":{"color":"#2c3e50"},"insert":"(2024). Tunepad.com. https://tunepad.com/help#chords"},{"insert":"\n"},{"attributes":{"color":"#2c3e50"},"insert":"(2024). Chordify.net. https://chordify.net/chords/underground-canopy-songs/feelm-intermission-chords"},{"insert":"\n"},{"attributes":{"color":"#2c3e50"},"insert":"(2024). Tunepad.com. https://tunepad.com/help#chords"},{"insert":"\n"},{"attributes":{"color":"#2c3e50"},"insert":"Geeksforgeeks. (2017, June 7). "},{"attributes":{"color":"#2c3e50","italic":true},"insert":"loops in python - GeeksforGeeks"},{"attributes":{"color":"#2c3e50"},"insert":". GeeksforGeeks. https://www.geeksforgeeks.org/loops-in-python/"},{"insert":"\n"},{"attributes":{"color":"#2c3e50"},"insert":"Quant Metropolis. (2024). "},{"attributes":{"color":"#2c3e50","italic":true},"insert":"Enumerate two python lists simultaneously?"},{"attributes":{"color":"#2c3e50"},"insert":" Stack Overflow. https://stackoverflow.com/questions/16326853/enumerate-two-python-lists-simultaneously"},{"insert":"\n"},{"attributes":{"color":"#2c3e50","italic":true},"insert":"Stand By Me"},{"attributes":{"color":"#2c3e50"},"insert":". (2015). Learn TunePad. https://learn.tunepad.com/tutorials/stand-by-me/"},{"insert":"\n"},{"attributes":{"color":"#2c3e50","italic":true},"insert":"TunePad Documentation"},{"attributes":{"color":"#2c3e50"},"insert":". (2024). Learn TunePad. https://learn.tunepad.com/docs/#tunepad.gain"},{"insert":"\n\n\n\n\n\n\n\n"}]},"displayOrder":1,"minimized":false},"instrument":"text","modified":"2024-11-06 05:37:15.559000","name":"Coding with Jazz ","public":false,"remix_parent":null,"version":"2.0","voice":"piano"},{"beats":200,"color":"#2f9aef","created":"2024-11-04 00:54:03.058000","deleted":false,"description":"","id":694927,"idata":{"author":"Anonymous","cloned":false,"displayOrder":5,"editor-theme":"tunepad-dark","gain":1,"hasError":false,"midi-input":false,"midi-output":false,"minimized":false,"pan":0,"patchId":10,"python":"# The Melody in flat synth\nwith swing (0.3): #using swing to create a less mechanical feel (TunePad Documentation, 2024)\n    for i in range (0,4):# Creating a nestled loop to repeat the melody 4 times for the duration of the song (Geeksforgeeks, 2017)\n        with gain(1.5, beats = 196): #using gain to make sure this is louder than the rest of the instruments (TunePad Documentation, 2024) \n            for j in range (0, 2): #the nestled loop to repeat first melodic sequence twice (Geeksforgeeks, 2017)\n                playNote (23, beats = 0.75) #melodic sequence 1\n                playNote (26, beats = 0.75) #melodic sequence 1\n                playNote (30, beats = 0.5) #melodic sequence 1\n                playNote (28, beats = 4) #melodic sequence 1\n                rest (beats = 1) #melodic sequence 1\n                playNote (28, beats = 0.5) #melodic sequence 1\n                playNote (26, beats = 0.4) #melodic sequence 1\n                playNote (28, beats = 0.75) #melodic sequence 1\n                playNote (30, beats = 0.4) #melodic sequence 1\n                playNote (23, beats = 0.75) #melodic sequence 1\n                playNote (26, beats = 0.3) #melodic sequence 1\n                playNote (23, beats = 2.9) #melodic sequence 1\n                rest (beats = 3) #melodic sequence 1\n            rest (beats = 1.3) #rest for 1.3 beats before going into the secend melodic sequence\n            playNote (22,beats = 0.25) #melodic sequence 2\n            playNote (23, beats = 0.5) #melodic sequence 2\n            playNote (30, beats = 2.75) #melodic sequence 2\n            playNote (30, beats = 0.75) #melodic sequence 2\n            playNote (30, beats = 0.5) #melodic sequence 2           \n            playNote (28, beats = 2.75) #melodic sequence 2\n            playNote (30, beats = 0.2) #melodic sequence 2\n            playNote (23, beats = 0.75) #melodic sequence 2\n            playNote (26, beats = 0.3) #melodic sequence 2\n            playNote (23, beats = 4) #melodic sequence 2\n            playNote (30, beats = 1.95) #melodic sequence 2\n\nrest (beats = 2) #rest for 2 beats before the final 4 beats (bar)\n            \nwith gain (value = [0.5, 0]): #using with gain function to fade out the ending (TunePad Documentation, 2024)\n    playNote (33, beats = 4) #playing the final note of the song \n        \n    \n    \n    \n              \n    \n    \n    \n    \n\n\n\n","show-editor":true,"show-instrument":true,"show-notation":true,"show-output":false,"show-timeline":true},"instrument":"piano","modified":"2024-11-07 09:47:04.580000","name":"The Melody in Flat Synth","public":false,"remix_parent":null,"version":"2.0","voice":"piano"},{"beats":200,"color":"#2f9aef","created":"2024-11-04 01:43:30.104000","deleted":false,"description":"","id":694952,"idata":{"editor-theme":"tunepad-dark","gain":1,"hasError":false,"midi-input":false,"midi-output":false,"pan":0,"python":"# The bassline that will be repeated throughout the peice of music using a 2 Dimensional List\n\nrest (beats = 2) #Rest while the flat synth introduces the song\n\n# Creating a 2 dimentsional list that loops through the notes_list and combines it with the beat_list to create the bassline (Stand by Me, 2015) (TutorialsTonight, 2024)\n# Lots of the code for this 2 dimensional list was based off of a Tunepad tutorial (Stand by Me, 2015), which taught me how to code 2D lists. I had to trial and error this to suit my needs.\n\nnotes_list = [\n    [23, 23, 21, 23, 21, 18, 21], #measure 1\n    [28, 28, 26, 28, 26, 23, 26], #measure 2\n    [23, 23, 21, 23, 21, 18, 21], #measure 3\n    [30, 30, 28, 30, 28, 25, 28], #measure 4\n    [28, 28, 26, 28, 26, 23, 26], #measure 5\n    [23, 23, 21, 23, 21, 18, 21], #measure 6\n    [30, 30, 28, 30, 28, 25, 28] #measure 7\n]\n\n# Single beat list for all measures of notes_list\nbeat_list = [1, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]\n\n# Define the sequence of measure repetitions by creating a repetitions list to keep track of how many times each measure is played\nrepetitions = [0] * 7\nrepetitions[0] = [0] * 4  # Measure 1 repeat 4 times\nrepetitions[1] = [1] * 2  # Measure 2 repeat 2 times\nrepetitions[2] = [2] * 2  # Measure 3 repeat 2 times\nrepetitions[3] = [3]      # Measure 4 repeat 1 time\nrepetitions[4] = [4]      # Measure 5 repeat 1 time\nrepetitions[5] = [5]      # Measure 6 repeat 1 time\nrepetitions[6] = [6]      # Measure 7 repeat 1 time\n\n# creating a flat list thats called sequence to combine what is written and implement the repetitions list\nsequence = [] #creates empty sequence list\nfor measure in repetitions: #implements the repetitions list\n    sequence.extend(measure) # takes an iterable (adds one at a time) and adds the individual elements to the sequence list\n\n# Need to repeat the sequence 4 times for the whole song \nfull_sequence = sequence * 4\n\n# Changing the gain and swing, and also actually directing to play the measures in notes_list against the single beat_list\nwith swing (0.5):  # Set the swing function to change rhythm to less mechanic sounding (TunePad Documentation, 2024)\n        # Play the measures in the full sequence\n    for measure_index in full_sequence:\n        notes = notes_list[measure_index] #defining notes as the measures in notes_list\n        type_beat = beat_list  # Use the beat_list for all measures in notes_list\n        \n        for index, (note, beat) in enumerate(zip(notes, type_beat)): #the enumerate loops through a list of the measures, whilst the zip pairs them with the beat (Quant Metropolis, 2024)\n            with gain (0.75): #to ensure that all notes are played at the same volume level (TunePad Documentation, 2024)\n                playNote(note, beats=beat)  # Play the measures in notes_list against the single measure in beats_list\n\n#Playing the final note at the end of the song\nwith gain (value = [0.5, 0]): # Using with gain function to fade out the last note (TunePad Documentation, 2024)\n    playNote (23, beats = 4) #playing the final note of the song \n    \n\n\n        ","show-editor":true,"show-instrument":true,"show-output":false,"show-timeline":true},"instrument":"bass","modified":"2024-11-06 05:26:02.746000","name":"Bassline ","public":false,"remix_parent":null,"version":"2.0","voice":"piano"}],"id":86208,"import_export_version":1,"meter":"4/4","modified":"2024-11-06 02:34:48.460000","name":"Coding with Jazz","preview":null,"pucks":{"key":"B minor","owner_id":"ae296ec5-7a12-45c1-adc4-1bf336e49ee1"},"remix_parent":null,"summary":"","tags":[],"tracks":[],"user_id":"ae296ec5-7a12-45c1-adc4-1bf336e49ee1","username":"jordanm","visibility":"shareable"}